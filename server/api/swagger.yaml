openapi: 3.0.0
info:
  title: Floral Store API
  description: API for Floral Store Aggregation
  version: 1.0.0

paths:
  /ping: &path_ping
    get:
      description: Get service health
      responses:
        200:
          $ref: "#/components/responses/Ping"
  /health: *path_ping
  
  /v1/auth/token/user:
    get: &v1_auth_token_user_get
      description: Issue Auth Token
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
        - in: query
          name: password
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/AuthToken"
        400:
          $ref: "#/components/responses/Error"
    post: &v1_auth_token_user_post
      description: Verify Auth Token
      parameters:
        - $ref: "#/components/parameters/AuthToken"
      responses:
        200:
          $ref: "#/components/responses/AuthTokenValidation"
                  
        400:
          $ref: "#/components/responses/Error"
  /v1/auth/token/store:
    get: *v1_auth_token_user_get
    post: *v1_auth_token_user_post

  /v1/users:
    post:
      description: Register user
      requestBody:
        $ref: "#/components/requestBodies/CreateUser"
      responses:
        201:
          $ref: "#/components/responses/User"
  /v1/users/me:
    get:
      description: Get me
      parameters:
        - $ref: "#/components/parameters/AuthToken"
      responses:
        200:
          $ref: "#/components/responses/User"
        401:
          $ref: "#/components/responses/Error"
  /v1/users/{id}:
    get:
      description: Get user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          $ref: "#/components/responses/User"
        404:
          $ref: "#/components/responses/Error"
          
  /v1/stores:
      post:
        description: Register store
        requestBody:
          $ref: "#/components/requestBodies/CreateStore"
        responses:
          201:
            $ref: "#/components/responses/Store"
      get:
        description: Get stores
        responses:
          201:
            $ref: "#/components/responses/Store"
          404:
            $ref: "#/components/responses/Error"
  /v1/stores/{id}:
      get:
        description: Get store
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
              format: int32
        responses:
          201:
            $ref: "#/components/responses/Store"
          404:
            $ref: "#/components/responses/Error"
  
  /v1/products:
    get:
      description: Get Products
      parameters:
        - in: query
          name: sort_by
          description: sort attribute
          required: false
          schema:
            type: string
            default: id
            enum:
              - id
              - price
              - store_id
              - max_height
        - in: query
          name: sort_order
          description: sort attribute
          required: false
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - in: query
          name: filter
          description: filter attribute
          required: false
          schema:
            type: object
            properties:
              filter.like_name:
                type: string
                nullable: true
              filter.store_id:
                type: integer
                format: int32
                nullable: true
              filter.category_id:
                type: integer
                format: int32
                nullable: true
              filter.min_height:
                type: integer
                format: int32
                nullable: true
              filter.max_height:
                type: integer
                format: int32
                nullable: true
              filter.min_price:
                type: integer
                format: int32
                nullable: true
              filter.max_price:
                type: integer
                format: int32
                nullable: true
      responses:
        200:
          $ref: "#/components/responses/Products"
    post:
      description: Add Product
      requestBody:
        $ref: "#/components/requestBodies/CreateProduct"
      responses:
        201:
          $ref: "#/components/responses/Product"
  /v1/products/{id}:
    get:
      description: Get Product
      parameters:
        - in: path
          name: id
          description: ID of the Product
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product" 
  
  /v1/categories:
    get:
      description: Get Categories
      responses:
        200:
          $ref: "#/components/responses/Categories"
    post:
      description: Add Category
      requestBody:
        $ref: "#/components/requestBodies/CreateCategory"
      responses:
        201:
          $ref: "#/components/responses/Category"
  /v1/categories/{id}:
    get:
      description: Get Category
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          $ref: "#/components/responses/Category"
  
  /v1/cart:
    get:
      description: Get user's Cart
      parameters:
        - $ref: "#/components/parameters/AuthToken"
      responses:
        200:
          $ref: "#/components/responses/Cart"
    post: &v1_cart_post
      description: Change user's Cart Position
      parameters:
      - $ref: "#/components/parameters/AuthToken"
      requestBody:
        $ref: "#/components/requestBodies/ChangeCartPosition"
      responses:
        200:
          $ref: "#/components/responses/CartPosition"
        400:
          $ref: "#/components/responses/Error"
        401:
          description: Unauthorized
          $ref: "#/components/responses/Error"
        404:
          description: Not Found
          $ref: "#/components/responses/Error"
    put: *v1_cart_post
    patch: *v1_cart_post
    delete:
      description: Clear user's Cart
      parameters:
      - $ref: "#/components/parameters/AuthToken"
      responses:
        200:
          $ref: "#/components/responses/CartPositions"
        401:
          description: Unauthorized
          $ref: "#/components/responses/Error"
  
  /v1/orders:
    get:
      description: Get Orders data
      parameters:
        - $ref: "#/components/parameters/AuthToken"
      responses:
        200:
          $ref: "#/components/responses/Orders"
        401:
          description: Unauthorized
          $ref: "#/components/responses/Error"
    post:
      description: Create Order
      parameters:
        - $ref: "#/components/parameters/AuthToken"
      responses:
        200:
          $ref: "#/components/responses/CreatedOrder"
        400:
          description: Bad request
          $ref: "#/components/responses/Error"
        401:
          description: Unauthorized
          $ref: "#/components/responses/Error"
    patch:
      description: Change Order status
      # parameters:
      #   - $ref: "#/components/parameters/AuthToken"
      requestBody:
        $ref: "#/components/requestBodies/ChangeOrderStatus"
      responses:
        200:
          $ref: "#/components/responses/Order"
        401:
          description: Unauthorized
          $ref: "#/components/responses/Error"
  /v1/orders/{id}:
    get:
      description: Get Orders data
      parameters:
      - $ref: "#/components/parameters/AuthToken"
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          $ref: "#/components/responses/Order"
        401:
          description: Unauthorized
          $ref: "#/components/responses/Error"
        404:
          description: No order found
          $ref: "#/components/responses/Error"


  /v1/favorites:
    get:
      parameters:
      - $ref: "#/components/parameters/AuthToken"
      responses:
        200:
          $ref: "#/components/responses/Favorites"
        401:
          $ref: "#/components/responses/Unauthorized"
    post:
      parameters:
      - $ref: "#/components/parameters/AuthToken"
      - in: query
        name: product_id
        description: ID of the Product
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Favorite product added
          $ref: "#/components/responses/FavoriteProduct"
        401:
          $ref: "#/components/responses/Unauthorized"
        409:
          description: Favorite product already added
          $ref: "#/components/responses/Error"
    delete:
      description: Remove product from favorite
      parameters:
      - $ref: "#/components/parameters/AuthToken"
      - in: query
        name: product_id
        description: ID of the Product
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Favorite product removed
          $ref: "#/components/responses/FavoriteProduct"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          description: Favorite product to be removed not found in favorite
          $ref: "#/components/responses/Error" 
      
  /v1/reviews:
    get:
      description: Get reviews
      parameters:
        - in: query
          name: user_id
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - in: query
          name: product_id
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
        - in: query
          name: store_id
          required: false
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          $ref: "#/components/responses/Reviews"
    post:
      description: Add review
      parameters:
      - $ref: "#/components/parameters/AuthToken"
      requestBody:
        $ref: "#/components/requestBodies/AddUpdateReview"
      responses:
        200:
          $ref: "#/components/responses/Review"
        401:
          $ref: "#/components/responses/Unauthorized"
        409:
          description: Review has already been posted
          $ref: "#/components/responses/Error"
    patch:
      description: Edit review
      parameters:
        - $ref: "#/components/parameters/AuthToken"
      requestBody:
        $ref: "#/components/requestBodies/AddUpdateReview"
      responses:
        200:
          $ref: "#/components/responses/Review"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          description: Review to edit not found
          $ref: "#/components/responses/Error"
    delete:
      description: Delete review
      parameters:
      - $ref: "#/components/parameters/AuthToken"
      - in: query
        name: product_id
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          $ref: "#/components/responses/ReviewDeleted"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          description: Review to edit not found
          $ref: "#/components/responses/Error"
      



components:
  responses:
    Ping:
      description: Healthcheck response
      x-go-name: PingResponse
      content:
        application/json:
          schema:
            type: object
            required:
              - ts
            properties:
              ts:
                type: integer
                format: int64
    Message:
      description: Information Response
      x-go-name: MessageResponse
      content:
        application/json:
          schema:
            required:
              - message
            type: object
            properties:
              message:
                type: string
    Error:
      description: General Error
      x-go-name: ErrorResponse
      content: &responses_error_content
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: string
    Unauthorized:
      description: Unauthorized
      x-go-name: UnauthorizedResponse
      content: *responses_error_content
    AuthToken:
      description: Authentication Token
      x-go-name: AuthTokenResponse
      content:
        application/json:
          schema:
            type: object
            required:
              - token
            properties:
              token:
                type: string
    AuthTokenValidation:
      description: AuthToken validation result
      x-go-name: AuthTokenValidationResponse
      content:
        application/json:
          schema:
            type: object
            required:
              - valid
            properties:
              valid:
                type: boolean
    User:
      description: User
      x-go-name: UserResponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    Store:
      description: Store
      x-go-name: StoreResponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Store"
    Stores:
      description: Stores
      x-go-name: StoresResponse
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Store"
    Category:
      description: Category
      x-go-name: CategoryResponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Category"
    Categories:
      description: Categories
      x-go-name: CategoriesResponse
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Category"
    Product:
      description: Product
      x-go-name: ProductResponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Product"
    Products:
      description: Products
      x-go-name: ProductsResponse
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Product"
    Cart:
      description: User's Cart
      x-go-name: CartResponse
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/CartProduct"
    CartPosition:
      description: User's Cart Position
      x-go-name: CartPositionResponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CartPosition"
    CartPositions:
      description: User's Cart Positions
      x-go-name: CartPositionsResponse
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/CartPosition"
    Order:
      description: Order data
      x-go-name: OrderResponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderWithPositions"
    CreatedOrder:
      description: Created Order
      x-go-name: CreatedOrderResponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Order"
    Orders:
      description: Orders data
      x-go-name: OrdersResponse
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Order"
    Favorites:
      description: Get favorite products
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Favorite"
    FavoriteProduct:
      description: Favorite product
      x-go-name: FavoriteProductResponse
      content:
        application/json:
          schema:
            type: object
            required:
            - id
            properties:
              id:
                type: integer
                format: int32
    Reviews:
      description: Reviews
      x-go-name: ReviewsResponse
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Review"
    Review:
      description: Review
      x-go-name: ReviewResponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Review"
    ReviewDeleted:
      description: Review deleted
      x-go-name: ReviewDeletedResponse
      content:
        application/json:
          schema:
            type: object
            required:
            - id
            properties:
              id:
                type: integer
                format: int32
  requestBodies:
    CreateStore:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - password
              - email
              - phone_number
            properties:
              name:
                type: string
                minLength: 3
                maxLength: 100
              password:
                type: string
                minLength: 6
                maxLength: 100
              email:
                type: string
                minLength: 6
                maxLength: 100
              phone_number:
                type: string
                minLength: 8
                maxLength: 24
    CreateUser:
      required: true
      x-go-name: CreateUserRequestBody
      content:
        application/json:
          schema:
            type: object
            required:
              - first_name
              - last_name
              - email
              - password
              - phone_number
            properties:
              first_name:
                type: string
                minLength: 2
                maxLength: 64
              last_name:
                type: string
                minLength: 2
                maxLength: 64
              email:
                type: string
                minLength: 5
                maxLength: 256
              password:
                type: string
                minLength: 6
                maxLength: 128
              phone_number:
                type: string
                minLength: 8
                maxLength: 24
    CreateProduct:
      required: true
      x-go-name: CreateProductRequestBody
      content:
        application/json:
          schema:
            type: object
            required:
              - store_id
              - name
              - description
              - image_url
              - price
              - min_height
              - max_height
              - category_id
            properties:
              store_id:
                type: integer
                format: int32
              name:
                type: string
              description:
                type: string
              image_url:
                type: string
              price:
                type: integer
                format: int32
              min_height:
                type: integer
                format: int32
              max_height:
                type: integer
                format: int32
              category_id:
                type: integer
                format: int32
    CreateCategory:
      required: true
      x-go-name: CreateCategoryRequestBody
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - description
            properties:
              name:
                type: string
                minLength: 4
                maxLength: 128
              description:
                type: string
                minLength: 0
                maxLength: 2048
    ChangeCartPosition:
      required: true
      x-go-name: ChangeCartPositionRequestBody
      content:
        application/json:
          schema:
            type: object
            required:
              # - user_id
              - product_id
              - quantity
            properties:
              # user_id:
              #   type: integer
              #   format: int32
              product_id:
                type: integer
                format: int32
              quantity:
                type: integer
                format: int32
                minimum: 0
    ChangeOrderStatus:
      required: true
      x-go-name: ChangeOrderStatusRequestBody
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - status
            properties:
              id:
                type: integer
                format: int32
              status:
                $ref: "#/components/schemas/OrderStatus"
    AddUpdateReview:
      required: true
      x-go-name: AddUpdateReviewRequestBody
      content:
        application/json:
          schema:
            type: object
            required:
              - product_id
              - rating
              - review_text
            properties:
              product_id:
                type: integer
                format: int32
              rating:
                type: number
                format: double
                minimum: 1
                maximum: 10
              review_text:
                type: string
              
  parameters:
    AuthToken:
      in: header
      name: &X_AUTH_TOKEN X-Auth-Token
      description: Authentication/API Token
      required: true
      schema:
        type: string
  schemas:
    Store:
      type: object
      required:
        - id
        - name
        - email
        - phone_number
        - created
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        created:
          type: integer
          format: int64
    User:
      type: object
      required:
        - id
        - first_name
        - last_name
        - email
        - phone_number
      properties:
        id:
          type: integer
          format: int32
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
    ProductCategory:
      required:
        - id
        - name
        - description
        - created
        - modified
      type: object
      properties:
        id:
          type: integer
          format: int32
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        phone_number:
          type: string
        created:
          type: number
          format: int64
    Product:
      required:
        - id
        - store_id
        - store_name
        - name
        - description
        - image_url
        - price
        - min_height
        - max_height
        - category
        - created
      type: object
      properties:
        id:
          type: integer
          format: int32
        store_id:
          type: integer
          format: int32
        store_name:
          type: string
        name:
          type: string
        description:
          type: string
        image_url:
          type: string
        price:
          type: integer
          format: int32
        created:
          type: integer
          format: int64
        category:
          type: object
          required:
            - id
            - name
            - description
          properties:
            id:
              type: integer
              format: int32
            name:
              type: string
            description:
              type: string
        min_height:
          type: integer
          format: int32
        max_height:
          type: integer
          format: int32
    Category:
      required:
        - id
        - name
        - description
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          minLength: 4
          maxLength: 128
        description:
          type: string
          minLength: 0
          maxLength: 2048
    CartPosition:
      type: object
      required:
      - product_id
      - quantity
      properties:
        product_id:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    CartProduct:
      type: object
      required:
      - product_id
      - quantity
      - name
      - description
      - price
      - image_url
      - category
      - category_id
      - category_name
      - store_id
      - store_name
      properties:
        product_id:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        price:
          type: integer
          format: int32
        image_url:
          type: string
        category_id:
          type: integer
          format: int32
        category_name:
          type: string
        store_id:
          type: integer
          format: int32
        store_name:
          type: string
    OrderPosition:
      type: object
      required:
      - product_id
      - quantity
      - name
      - description
      - price
      - image_url
      - category
      - category_id
      - category_name
      - store_id
      - store_name
      properties:
        product_id:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        price:
          type: integer
          format: int32
        image_url:
          type: string
        category_id:
          type: integer
          format: int32
        category_name:
          type: string
        store_id:
          type: integer
          format: int32
        store_name:
          type: string
    OrderStatus:
      type: string
      enum:
      - created
      - in_progress
      - processed
      - delivery
      - canceled
      - completed
    Order:
      required:
        - id
        - status
        - user_id
        - created
        - status_modified
      type: object
      properties:
        id:
          type: integer
          format: int32
        status:
          $ref: "#/components/schemas/OrderStatus"
        user_id:
          type: integer
          format: int32
        created:
          type: integer
          format: int64
        status_modified:
          type: integer
          format: int64
    OrderWithPositions:
      required:
        - id
        - status
        - user_id
        - created
        - status_modified
        - positions
      type: object
      properties:
        id:
          type: integer
          format: int32
        status:
          $ref: "#/components/schemas/OrderStatus"
        user_id:
          type: integer
          format: int32
        created:
          type: integer
          format: int64
        status_modified:
          type: integer
          format: int64
        positions:
          type: array
          items:
            $ref: "#/components/schemas/OrderPosition"
    Favorite:
      required:
        - product_id
        - store_id
        - store_name
        - name
        - description
        - image_url
        - price
        - category_id
        - category_name
        - added_favorite
      type: object
      properties:
        product_id:
          type: integer
          format: int32
        store_id:
          type: integer
          format: int32
        store_name:
          type: string
        name:
          type: string
        description:
          type: string
        image_url:
          type: string
        price:
          type: integer
          format: int32
        category_id:
          type: integer
          format: int32
        category_name:
          type: string
        added_favorite:
          type: integer
          format: int64
    Review:
      required:
        - id
        - user_id
        - product_id
        - product_name
        - rating
        - review_text
        - created
        - modified
        - user_name
      type: object
      properties:
        id:
          type: integer
          format: int32
        user_id:
          type: integer
          format: int32
        product_id:
          type: integer
          format: int32
        product_name:
          type: string
        rating:
          minimum: 1
          maximum: 10
          type: number
          format: double
        review_text:
          type: string
        created:
          type: integer
          format: int64
        modified:
          type: integer
          format: int64
        user_name:
          type: string
